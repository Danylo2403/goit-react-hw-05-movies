{"version":3,"file":"static/js/528.37c6545c.chunk.js","mappings":"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","sources":["components/CardOfMovie/CardOfMovie.styled.js","components/CardOfMovie/CardOfMovie.jsx","components/GalleryOfMovies/GalleryOfMovies.styled.js","components/GalleryOfMovies/GalleryOfMovies.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledMovieItem = styled.div`\n  text-align: center;\n  border: 2px solid #e1e1e1;\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s ease-in-out;\n  background-color: #e6dada;\n  &:hover {\n    transform: translateY(-4px);\n    background-color: #ddd6f3;\n  }\n`;\n\nexport const StyledMovieItemImage = styled.img`\n  width: 100%;\n  height: 320px;\n  object-fit: cover;\n  border-top-left-radius: 12px;\n  border-top-right-radius: 12px;\n`;\n\nexport const StyledCardInfo = styled.div`\n  display: flex;\n  align-self: center;\n  align-items: center;\n  font-size: 18px;\n  font-weight: bold; \n  padding: 15px;\n  height: 79px;\n  color: #333;\n`;\n\nexport const StyledLink = styled(Link)`\n  height: 100%;\n  color: #333;\n  background-color: #ddd6f3;\n  text-decoration: none;\n  padding: 10px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n  &:hover {\n    text-decoration: underline;\n    background-color: #e6dada;\n  }\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { StyledCardInfo, StyledMovieItem, StyledMovieItemImage, StyledLink } from './CardOfMovie.styled';\n\nexport const MovieCard = ({ id, title, poster }) => {\n  const location = useLocation();\n\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      <StyledMovieItem>\n        <StyledMovieItemImage\n          src={\n            poster\n              ? `http://image.tmdb.org/t/p/w500/${poster}`\n              : 'https://www.kevingage.com/assets/clapboard.png'\n          }\n          alt={title}\n        />\n\n        <StyledCardInfo>\n          <p>{title}</p>\n        </StyledCardInfo>\n      </StyledMovieItem>\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledMoviesContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  grid-row-gap: 32px;\n`;\n","import React from 'react';\nimport { MovieCard } from 'components/CardOfMovie/CardOfMovie';\nimport { StyledMoviesContainer } from './GalleryOfMovies.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <StyledMoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieCard key={id} id={id} title={title} poster={poster_path} />\n        );\n      })}\n    </StyledMoviesContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { BiSearchAlt2 } from 'react-icons/bi';\n\nexport const StyledSearchForm = styled.form`\n  margin: 0 auto 20px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #f5f5f5; \n  border-radius: 10px; \n  overflow: hidden;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1); \n`;\n\nexport const StyledSearchInput = styled.input`\n  flex: 1; \n  font: inherit;\n  font-size: 18px; \n  border: none;\n  outline: none;\n  padding: 12px; \n  background-color: transparent;\n  color: #333333; \n  &::placeholder {\n    color: #666666; \n  }\n`;\n\nexport const StyledSearchButton = styled.button`\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.8; \n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #4a90e2; \n  border-radius: 0 10px 10px 0; \n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const StyledSearchIcon = styled(BiSearchAlt2)`\n  width: 24px;\n  height: 24px; \n  fill: #ffffff; \n`;\n","import { useSearchParams } from 'react-router-dom';\nimport {\n  StyledSearchForm,\n  StyledSearchButton,\n  StyledSearchIcon,\n  StyledSearchInput,\n} from './SearchBar.styled';\n\nexport const SearchBar = ({ query }) => {\n  const [params, setParams] = useSearchParams();\n\n  const onUpdateQuery = (evt) => {\n    evt.preventDefault();\n    const searchQuery = evt.target.elements.search.value.trim();\n\n    if (!searchQuery) {\n      return alert('Enter movie, please');\n    }\n    params.set('query', searchQuery);\n    setParams(params);\n  };\n\n  return (\n    <StyledSearchForm onSubmit={onUpdateQuery}>\n      <StyledSearchButton type=\"submit\">\n        <StyledSearchIcon />\n      </StyledSearchButton>\n\n      <StyledSearchInput\n        name=\"search\"\n        type=\"text\"\n        autoFocus\n        placeholder=\"Search movies\"\n        defaultValue={query}\n      />\n    </StyledSearchForm>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'utils/movies-api';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MoviesGallery } from 'components/GalleryOfMovies/GalleryOfMovies';\nimport { Loader } from 'components/Load/Load';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [params] = useSearchParams();\n\n  const query = params.get('query') ?? '';\n\n  useEffect(() => {\n    const getMoviesByQuery = async () => {\n      setIsLoading(true);\n\n      try {\n        const fetchedMovies = await fetchMoviesByQuery(query);\n        setMovies(fetchedMovies);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (query !== '') {\n      getMoviesByQuery();\n    }\n  }, [query]);\n\n  return (\n    <section>\n      <SearchBar query={query} />\n      {movies && <MoviesGallery movies={movies} />}\n      {isLoading && <Loader />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledMovieItem","styled","_templateObject","_taggedTemplateLiteral","StyledMovieItemImage","_templateObject2","StyledCardInfo","_templateObject3","StyledLink","Link","_templateObject4","MovieCard","_ref","id","title","poster","location","useLocation","_jsx","to","concat","state","from","children","_jsxs","src","alt","StyledMoviesContainer","MoviesGallery","movies","map","_ref2","poster_path","StyledSearchForm","StyledSearchInput","StyledSearchButton","StyledSearchIcon","BiSearchAlt2","SearchBar","query","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","params","setParams","onSubmit","evt","preventDefault","searchQuery","target","elements","search","value","trim","alert","set","type","name","autoFocus","placeholder","defaultValue","_params$get","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","get","useEffect","getMoviesByQuery","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovies","_context","prev","next","fetchMoviesByQuery","sent","t0","message","finish","stop","apply","arguments","Loader"],"sourceRoot":""}