{"version":3,"file":"static/js/50.e71399c8.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","components/Information/Information.styled.js","components/Information/Information.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLayout = styled.div`\n  display: flex;\n  justify-content: center; \n  gap: 24px;\n  margin: 0 auto;\n`;\n\nexport const StyledBackLink = styled(Link)`\n  display: inline-block;\n  padding: 10px 20px;\n  margin-bottom: 20px;\n  text-decoration: none;\n  color: #ffffff;\n  font-size: 1.2rem;\n  font-weight: 600;\n  background-color: #4a90e2; \n  border-radius: 4px;\n  transition: background-color 0.3s, transform 0.3s, box-shadow 0.3s;\n\n  &:hover {\n    background-color: #007acc; \n    transform: translateY(-2px);\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n  }\n\n  &:active {\n    transform: translateY(0);\n    box-shadow: none;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: 'Roboto', sans-serif; \n  font-size: 2.5rem;\n  font-weight: 600;\n  letter-spacing: 0.1rem;\n  margin-bottom: 1rem;\n`;\n\nexport const OverviewTitle = styled.h3`\n  font-family: 'Roboto', sans-serif; \n  font-weight: 400;\n  font-size: 1.5rem;\n  margin-top: 2rem;\n  margin-bottom: 1.5rem;\n`;\n\nexport const Overview = styled.p`\n  font-family: 'Roboto', sans-serif; \n  font-size: 1rem;\n  max-width: 500px;\n  margin-bottom: 2.5rem;\n`;\n\nexport const GenresTitle = styled.h3`\n  font-family: 'Roboto', sans-serif; \n  font-weight: 400;\n  font-size: 1.5rem;\n  margin-bottom: 1.5rem;\n`;\n\nexport const Genres = styled.ul`\n  padding-left: 20px;\n  list-style: none;\n  display: flex;\n  gap: 2rem;\n\n  li {\n    font-family: 'Roboto', sans-serif; \n    font-size: 1.2rem;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledInformationLayout = styled.ul`\n  display: flex;\n  gap: 12px;\n  flex-direction: row; /* Змінено напрямок на горизонтальний */\n  border: 1px solid #d7d4cd;\n  margin: 40px 0;\n  padding: 20px 48px;\n  list-style: none;\n  justify-content: center; /* Розміщення елементів по центру */\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  font-size: 1.5rem;\n  width: 150px;\n  height: 3rem;\n  color: #252525;\n  background-color: #dfdfdf;\n  border-radius: 20px;\n  text-align: center;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #c0c0c0;\n  }\n\n  &.active {\n    background-color: #a9a9a9;\n    color: #ffffff;\n  }\n`;\n","import { StyledInformationLayout, StyledNavLink } from './Information.styled';\n\nexport const Information = () => {\n  return (\n    <StyledInformationLayout>\n      <StyledNavLink to=\"cast\">Cast</StyledNavLink>\n      <StyledNavLink to=\"reviews\">Reviews</StyledNavLink>\n    </StyledInformationLayout>\n  );\n};","import { useEffect, useRef, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetailsById } from '../../utils/movies-api';\nimport {\n  MovieLayout,\n  MovieTitle,\n  OverviewTitle,\n  Overview,\n  GenresTitle,\n  Genres,\n  StyledBackLink,\n} from './MovieDetails.styled';\nimport { Information } from 'components/Information/Information';\nimport { Loader } from 'components/Load/Load';\nimport { MdOutlineBackHand } from \"react-icons/md\";\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  const prevPage = useRef(location);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      setIsLoading(true);\n\n      try {\n        const movieDetails = await fetchMovieDetailsById(movieId);\n        setMovie(movieDetails);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <>\n          <StyledBackLink to={prevPage.current.state?.from ?? '/'}>\n            <span>Go back <MdOutlineBackHand /></span>\n          </StyledBackLink>\n          <MovieLayout>\n            <img\n              src={`http://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt={movie.title}\n              width=\"250\"\n            />\n\n            <div>\n              <MovieTitle>{movie.title}</MovieTitle>\n              <span>\n                <b>User score: </b> {Math.ceil(movie.vote_average * 10)} %\n              </span>\n              <OverviewTitle>Overview</OverviewTitle>\n              <Overview>{movie.overview}</Overview>\n              <GenresTitle>Genres</GenresTitle>\n              <Genres>\n                {movie.genres.map(genre => {\n                  return <li key={genre.id}>{genre.name}</li>;\n                })}\n              </Genres>\n            </div>\n            {isLoading && <Loader />}\n          </MovieLayout>\n          <Information />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n}"],"names":["MovieLayout","styled","_templateObject","_taggedTemplateLiteral","StyledBackLink","Link","_templateObject2","MovieTitle","_templateObject3","OverviewTitle","_templateObject4","Overview","_templateObject5","GenresTitle","_templateObject6","Genres","_templateObject7","StyledInformationLayout","StyledNavLink","NavLink","Information","_jsxs","children","_jsx","to","MovieDetails","_prevPage$current$sta","_prevPage$current$sta2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","location","useLocation","prevPage","useRef","useEffect","_getMovieDetails","_asyncToGenerator","_regeneratorRuntime","_callee","movieDetails","_context","prev","next","fetchMovieDetailsById","sent","t0","alert","message","finish","stop","apply","arguments","getMovieDetails","_Fragment","current","state","from","MdOutlineBackHand","src","concat","poster_path","alt","title","width","Math","ceil","vote_average","overview","genres","map","genre","name","id","Loader","Outlet"],"sourceRoot":""}